syntax = "proto3";

package qlik;

message ConnectionInfo
{
    string connectionString = 1;
    string user = 2;
    string password = 3;
}

message GenericCommand
{
    string command = 1;
    string method = 2;
    repeated string parameters = 3;
    ConnectionInfo connection = 4;
}

message GenericCommandResponse
{
    string data = 1;
}

message SessionInfo
{
    string user = 1;
    string sessionId = 2;
    string docId = 3;
}

message DataInfo
{
    string statement = 1;
    string statementParameters = 2;
}

message GetDataOptions
{
    ConnectionInfo connection = 1;
    SessionInfo sessionInfo = 2;
    DataInfo parameters = 3;
}

enum ValueFlag {
    Normal = 0;
    Null = 1;
}

message TimestampStruct {
    int32 year = 1;
    int32 month = 2;     /// 1-12
    int32 day = 3;       /// 1-31
    int32 hour = 4;      /// 0-23
    int32 minute = 5;    /// 0-59
    int32 second = 6;    /// 0-59
    int32 nanoSecond = 7;      /// 0 - 999999999
}


message Dual
{
    double numData = 1; /// Numeric value as double.
    string strData = 2; /// String.
    int64  intData = 3; /// Numeric value as integer.
    ValueFlag flag = 4; /// NULL and other special cases
    TimestampStruct timeStamp = 5; /// Date and Time as year/month/.../seconds structure
}

message Row
{
    repeated Dual duals = 1; /// Row of duals.
}

message Column
{
    repeated string strings = 1;
    repeated double numbers = 2;
    repeated int64 integers = 3;
    repeated TimestampStruct timeStamps = 4;
    repeated ValueFlag flags = 5;
}

message BundledRows
{
    repeated Row rows = 1;
    repeated Column cols = 2;
}

enum FieldTag {
    Name = 0;
    Email = 1;
    Url = 2;
    Description = 3;
    FileName = 4;
    Address = 5;
    Comment = 6;
    PhoneNumber = 7;
    FaxNumber = 8;
    Quantity = 9;
    Id = 10;

    Money = 100;
    MoneyDebit = 101; // Or Sales ?
    MoneyCredit = 12; // Or Cost ?

    Interval = 200;
    Timestamp = 201;
    Date = 202;
    StartDate = 203;
    EndDate = 204;

    Customer = 300;
    Employee = 301;
    Contractor = 302;
    Intern = 303;

    // Meter = 400;
    // Centimeter = 401;
    // Millimeter = 402;
    // Inches = 403;

    USD = 500;
    GBP = 501;
    SEK = 502;
    JPY = 503;
    EUR = 504;
    CNY = 505;


    // XML = 19;
    // JSON = 20;
    // Photo = 21;
    // Document
    // GEO_LOCATION
    // GEO_POINTS
    // IP Number
    // Guid
    // Checksum / Hash result
}


enum FieldType
{
    // This currently 2 enums in one
    // 1. Data Transfer type
    // 2. Data Interpretation type
    TEXT = 0;
    DOUBLE = 1;
    INTEGER = 2;
    UNIX_1970_SECONDS_UTC_INTEGER = 3;
    STRUCT_TIMESTAMP = 4;
    RFC_3339_TEXT = 5;
    DAYS_SINCE_1900_DOUBLE = 6;
    // DUAL; BLOB_BASE64; BLOB_HEX; DUAL_WITH_INFO;
}

message FieldInfo
{
    string name = 1;
    FieldType type = 2;
    repeated FieldTag tags = 3;
    // repeated string extraTags = 4;
}

message GetDataResponse
{
    repeated FieldInfo fieldInfo = 1;
    string tableName = 2;
}

service Connector
{
    rpc ExecuteGenericCommand(GenericCommand) returns(GenericCommandResponse) {}
    rpc GetData(GetDataOptions) returns(stream BundledRows) {}
}